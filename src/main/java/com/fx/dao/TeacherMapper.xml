<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fx.dao.TeacherMapper">
    <resultMap id="BaseResultMap" type="com.fx.entity.Teacher">
        <id column="teacher_id" property="teacherId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="VARCHAR"/>
        <result column="birth_date" property="birthDate" jdbcType="DATE"/>
        <result column="degree" property="degree" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="enrolmentDate" property="enrolmentdate" jdbcType="DATE"/>
        <result column="college_id" property="collegeId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="TeacherWithCollegeMap" type="com.fx.entity.TeacherWithCollege">
        <id column="teacher_id" property="teacherId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="VARCHAR"/>
        <result column="birth_date" property="birthDate" jdbcType="DATE"/>
        <result column="degree" property="degree" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="enrolmentDate" property="enrolmentdate" jdbcType="DATE"/>
        <result column="college_id" property="collegeId" jdbcType="INTEGER"/>
        <association property="college" column="college_id" select="com.fx.dao.CollegeMapper.selectByPrimaryKey"/>
    </resultMap>
    <sql id="Base_Column_List">
    teacher_id, name, gender, birth_date, degree, title, enrolmentDate, college_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from teacher
        where teacher_id = #{teacherId,jdbcType=INTEGER}
    </select>
    <select id="getCount" resultType="java.lang.Integer">
        SELECT count(0)
        FROM teacher
    </select>
    <select id="findAllByPage" resultMap="TeacherWithCollegeMap">
        SELECT *
        FROM teacher, college
        WHERE teacher.college_id = college.college_id
        ORDER BY teacher_id
        LIMIT #{start}, #{offset}
    </select>
    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM teacher
        ORDER BY teacher_id
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM teacher
        WHERE teacher_id = #{teacherId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.fx.entity.Teacher">
        INSERT INTO teacher (teacher_id, name, gender,
                             birth_date, degree, title,
                             enrolmentDate, college_id)
        VALUES (#{teacherId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR},
                #{birthDate,jdbcType=DATE}, #{degree,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},
                #{enrolmentdate,jdbcType=DATE}, #{collegeId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.fx.entity.Teacher">
        insert into teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthDate != null">
                birth_date,
            </if>
            <if test="degree != null">
                degree,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="enrolmentdate != null">
                enrolmentDate,
            </if>
            <if test="collegeId != null">
                college_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">
                #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="birthDate != null">
                #{birthDate,jdbcType=DATE},
            </if>
            <if test="degree != null">
                #{degree,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="enrolmentdate != null">
                #{enrolmentdate,jdbcType=DATE},
            </if>
            <if test="collegeId != null">
                #{collegeId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fx.entity.Teacher">
        update teacher
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="birthDate != null">
                birth_date = #{birthDate,jdbcType=DATE},
            </if>
            <if test="degree != null">
                degree = #{degree,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="enrolmentdate != null">
                enrolmentDate = #{enrolmentdate,jdbcType=DATE},
            </if>
            <if test="collegeId != null">
                college_id = #{collegeId,jdbcType=INTEGER},
            </if>
        </set>
        where teacher_id = #{teacherId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fx.entity.Teacher">
    update teacher
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=DATE},
      degree = #{degree,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      enrolmentDate = #{enrolmentdate,jdbcType=DATE},
      college_id = #{collegeId,jdbcType=INTEGER}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
</mapper>